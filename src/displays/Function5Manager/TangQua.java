/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package displays.Function5Manager;

import displays.MainFrame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import models.QuyPhanThuongModel;
import utilities.MysqlConnection;

/**
 *
 * @author Loc Nguyen
 */
public class TangQua extends javax.swing.JPanel {

    /**
     * Creates new form LapDanhSach
     */
    public TangQua() {
        initComponents();
        fillDipComboBox();
    }

    private void fillDipComboBox() {
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Chọn dịp");
        jComboBox1.setSelectedIndex(0);
        
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "select DISTINCT(dip) from phanqua";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            try (ResultSet rs = preparedStatement.executeQuery()) {
                while (rs.next()) {
                    String dip = rs.getString("dip");
                    jComboBox1.addItem(dip);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void fillHoTenComboBox() {
        jComboBox2.removeAllItems();
        jComboBox2.addItem("Chọn họ tên người nhận");
        jComboBox2.setSelectedIndex(0);
        
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "select DISTINCT(hoten) from nhankhau";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            try (ResultSet rs = preparedStatement.executeQuery()) {
                while (rs.next()) {
                    String dip = rs.getString("hoten");
                    jComboBox2.addItem(dip);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
    
    private void fillCMNDComboBox() {
        jComboBox3.removeAllItems();
        jComboBox3.addItem("Chọn số chứng minh thư người nhận");
        jComboBox3.setSelectedIndex(0);
        
        String hoTen = String.valueOf(jComboBox2.getSelectedItem());
        
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "SELECT DISTINCT(cmnd) FROM nhankhau WHERE hoten=?;";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, hoTen);
            try (ResultSet rs = preparedStatement.executeQuery()) {
                while (rs.next()) {
                    String dip = rs.getString("cmnd");
                    jComboBox3.addItem(dip);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void resetComboBox(){
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        
        jComboBox1.addItem("Chọn dịp");
        jComboBox2.addItem("Chọn họ tên người nhận");
        jComboBox3.addItem("Chọn số chứng minh thư người nhận");
        
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        jComboBox3.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setText("Dịp");

        jLabel2.setText("Họ tên");

        jLabel3.setText("Số cmnd");

        jButton1.setText("Tặng thưởng");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Số lượng phần quà");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, 0, 215, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(429, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tangLeTetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangLeTetActionPerformed

    }//GEN-LAST:event_tangLeTetActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String dip = String.valueOf(jComboBox1.getSelectedItem());
        String hoTen = String.valueOf(jComboBox2.getSelectedItem());
        String cmnd = String.valueOf(jComboBox3.getSelectedItem());
        int soLuong = Integer.parseInt(jTextField1.getText());
        int nhankhau_id = -1;
        int thanhTien = 0;
        
        // tim nhankhau_id
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "select id from nhankhau WHERE cmnd=?;";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, cmnd);
            System.out.println(preparedStatement);
            try (ResultSet rs = preparedStatement.executeQuery()) {
                rs.next();
                nhankhau_id = rs.getInt("id");
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // tim so tien mot phan qua
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "SELECT thanhtien FROM phanqua WHERE dip=?;";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, dip);
            try (ResultSet rs = preparedStatement.executeQuery()) {
                rs.next();
                thanhTien = rs.getInt("thanhtien");
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(thanhTien);
        
        
        // insert vao bang phanqua_nhankhau
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "INSERT INTO phanqua_nhankhau (dip, nhankhau_id, soluong) VALUES (?, ?, ?)";
                PreparedStatement preparedStatement = connection.prepareCall(query);
                preparedStatement.setString(1, dip);
                preparedStatement.setInt(2, nhankhau_id);
                preparedStatement.setInt(3, soLuong);
                preparedStatement.execute();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // tim so du trong quy phan thuong
        int soDu = -1;
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "SELECT sodu FROM quyphanthuong WHERE thoigian IN (SELECT MAX(thoigian) from quyphanthuong)";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            try (ResultSet rs = preparedStatement.executeQuery()) {
                while (rs.next()) {
                    soDu = rs.getInt("sodu");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // cap nhat vao quy
        int soDuMoi = soDu - soLuong * thanhTien;
        String moTa = "tieu " + String.valueOf(soLuong * thanhTien) + ", tang thuong cho " + hoTen + ", so cmnd: " + cmnd;
        try (Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "INSERT INTO quyphanthuong (sodu, mota) VALUES (?, ?)";
                PreparedStatement preparedStatement = connection.prepareCall(query);
                preparedStatement.setInt(1, soDuMoi);
                preparedStatement.setString(2, moTa);
                preparedStatement.execute();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jTextField1.setText("");
        resetComboBox();
        fillDipComboBox();
        jTextField2.setText("Tặng thưởng thành công!!");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        fillHoTenComboBox();
        jTextField2.setText("");
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        fillCMNDComboBox();
        jTextField2.setText("");
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        jTextField2.setText("");
    }//GEN-LAST:event_jComboBox3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
