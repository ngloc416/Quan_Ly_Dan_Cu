/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package displays.Function5Manager;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.QuyPhanThuongModel;
import utilities.MysqlConnection;

/**
 *
 * @author Loc Nguyen
 */
public class QuanLyQuy extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyQuy
     */
    private int soDu = 0;
    Locale localeVN = new Locale("vi", "VN");
    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
        
    public QuanLyQuy() {
        initComponents();
        soDu = getSoDu();
        txtSoDu.setText("" + currencyVN.format(soDu));

        hienThiLichSuBienDong();
    }

    public static int getSoDu() {
        int tmp = 0;
        try ( Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "SELECT sodu FROM quyphanthuong WHERE thoigian IN (SELECT MAX(thoigian) from quyphanthuong)";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            try ( ResultSet rs = preparedStatement.executeQuery()) {
                while (rs.next()) {
                    tmp = rs.getInt("sodu");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tmp;
    }

    List<QuyPhanThuongModel> getListQuyPhanThuong() {
        List<QuyPhanThuongModel> res = new ArrayList<>();

        try ( Connection connection = MysqlConnection.getMysqlConnection()) {
            String query = "SELECT sodu, DATE_FORMAT(thoigian, '%Y-%m-%d %T') AS thoigian, mota FROM quyphanthuong ORDER BY thoigian DESC";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            try ( ResultSet rs = preparedStatement.executeQuery()) {
                while (rs.next()) {
                    int sodu = rs.getInt("sodu");
                    String thoiGian = rs.getString("thoigian");
                    String moTa = rs.getString("mota");
                    QuyPhanThuongModel qpt = new QuyPhanThuongModel();
                    qpt.setMoTa(moTa);
                    qpt.setThoiGian(thoiGian);
                    qpt.setSoDu(sodu);
                    res.add(qpt);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyQua.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
        }

        return res;
    }

    private void hienThiLichSuBienDong() {
        DefaultTableModel tableModel = (DefaultTableModel) tblLichSu.getModel();
        tableModel.setRowCount(0);

        List<QuyPhanThuongModel> listQuy = getListQuyPhanThuong();

        if (!listQuy.isEmpty()) {
            List<Integer> listBienDong = new ArrayList<>();
            for (int i = 0; i < listQuy.size() - 1; i++) {
                int bienDong = listQuy.get(i).getSoDu() - listQuy.get(i + 1).getSoDu();
                listBienDong.add(bienDong);
            }
            listBienDong.add(listQuy.get(listQuy.size() - 1).getSoDu());

            for (int i = 0; i < listQuy.size(); i++) {
                String thoiGian = listQuy.get(i).getThoiGian();
                String moTa = listQuy.get(i).getMoTa();
                int sodu = listQuy.get(i).getSoDu();
                int bienDong = listBienDong.get(i);
                tableModel.addRow(new Object[]{thoiGian, currencyVN.format(sodu), 
                currencyVN.format(bienDong), moTa});
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSoDu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTienThem = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLichSu = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Số tiền trong quỹ:");

        txtSoDu.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Số tiền thêm vào quỹ:");

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Lịch sử biến động quỹ:");

        tblLichSu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Thời gian", "Số dư", "Biến động", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLichSu.setRowHeight(22);
        jScrollPane3.setViewportView(tblLichSu);
        if (tblLichSu.getColumnModel().getColumnCount() > 0) {
            tblLichSu.getColumnModel().getColumn(0).setMinWidth(120);
            tblLichSu.getColumnModel().getColumn(0).setMaxWidth(120);
            tblLichSu.getColumnModel().getColumn(1).setMinWidth(100);
            tblLichSu.getColumnModel().getColumn(1).setMaxWidth(100);
            tblLichSu.getColumnModel().getColumn(2).setMinWidth(100);
            tblLichSu.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txtSoDu, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addComponent(txtTienThem)
                .addGap(100, 100, 100)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoDu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTienThem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (txtTienThem.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số tiền!", "Warning!", JOptionPane.WARNING_MESSAGE);
        } else if (JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm không?", "Warning!", JOptionPane.YES_NO_OPTION) == 0) {
            try {
                int soTien = Integer.parseInt(txtTienThem.getText());
                String moTa = "+ " + currencyVN.format(soTien) + " VNĐ vào quỹ";
                int soDuCu = getSoDu();
                int soDuMoi = soDuCu + soTien;

                try ( Connection connection = MysqlConnection.getMysqlConnection()) {
                    String query = "INSERT INTO quyphanthuong (sodu, mota) VALUES (?, ?)";
                    PreparedStatement preparedStatement = connection.prepareCall(query);
                    preparedStatement.setString(1, String.valueOf(soDuMoi));
                    preparedStatement.setString(2, moTa);
                    preparedStatement.execute();
                    soDu = soDuMoi;
                    txtSoDu.setText("" + currencyVN.format(soDu));
                    txtTienThem.setText("");
                    hienThiLichSuBienDong();
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(QuanLyQuy.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Định dạng số tiền nhập không đúng!", "Warning!", JOptionPane.WARNING_MESSAGE);
                txtTienThem.setText("");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblLichSu;
    private javax.swing.JTextField txtSoDu;
    private javax.swing.JTextField txtTienThem;
    // End of variables declaration//GEN-END:variables
}
